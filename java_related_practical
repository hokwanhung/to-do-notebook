# java_related
## Rules:
   1. Use my own language to explain the knowledge(unless no better explanation can be think of).
   2. Do revision before going to bed every day.
## 2020.12.18
**1. How to insert PI into calculation?**
     -ans: `Math.PI`
     -explanation: static double in Class `Math` (java.lang.Math - no requirement for installation of the class.))
**2. How to cor. to decimal places (For example 4 decimal places)**
     -ans: `DecimalFormat [variableName] = new DecimalFormat(#.####)
           *[variable].setRoundingMode(RoudingMode [roudingMode]) (optional)*
           [variable].format([inputVariableName])`
     -explanation: subclass of `NumberFormat` (the naming explains itself)
                   [roudingMode] e.g. CEILLING / DOWN / FLOOR / UP
**3. What is try-and-catch in Java Exceptions?**
     -ans: `try {
           // Block of code to try
           } catch (Exception e) {
           // Block of code to handle errors
           } *finally {
           // Block of code to be executed regardless the result (optional)
           }*`
     -explanation: "Swallow the errors" with codes in the catch block instead of stop executing the codes when errors happen.
**3a. What is the difference between `break` statement, `continue` statement and `return` statement, and how to use them?
      -ans: `break` is used to exit from the loop.
            `return` is used to go back to the step where the method was called or to stop further execution.
            `continue` is used to break one iteration in the loop and continues with the next iteration.
**3b. Why is `try-and-catch` and `while(true)` not recommened in java?
      -ans: The usage of `while(true)` depends on situations whether `while(true)`+`break` or `boolean(flag)` fits better.
            For `try-and-catch`, appears to be discussion about whether stop when errors happens is good or not.
**4. How to power up a number?**
     -ans: `Math.pow([baseDouble], [exponentDouble])`
     -explanation: **Noticeably, java allows the usage of nested methods.**
                   **It is more appriopriate to use double type in mathematics calculation.**
**5. How to root down a number?**
     -ans: `math.sqrt([variableName])`
     
